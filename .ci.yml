image: $CI_IMAGE

.common_only: &common_only
    only:
        - main
        - dev
        - merge_requests

variables:
    GIT_STRATEGY: clone
    GIT_SUBMODULE_STRATEGY: recursive

stages:
    - lint
    - build
    - docs

pre-commit:
    stage: lint
    <<: *common_only
    script:
        - pre-commit run --all-files

commit-lint:
    stage: lint
    only:
        - merge_requests
    script:
        - ./.github/scripts/lint-commits.sh origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME $CI_COMMIT_SHA

build-server-app:
    stage: build
    <<: *common_only
    script:
        - ./build server-app

test-singlehtml-build:
    stage: build
    <<: *common_only
    script:
        - ./build static-html ./examples/sample-specification.json ./examples/sample-dataflow.json --editor-title "Test webpage" --output-directory ./output-dir --clean-build --single-html output.html --minify-specification

test-validate:
    stage: build
    <<: *common_only
    script:
        - ./validate ./examples/sample-specification.json ./examples/sample-dataflow.json

test-python:
    stage: build
    <<: *common_only
    script:
        - pip3 install -e ".[test,backend-communication]"
        - python3 -m pytest

test-frontend:
    stage: build
    <<: *common_only
    script:
        - ./build static-html ./examples/sample-specification.json ./examples/sample-dataflow.json
        - cd pipeline_manager/frontend
        - npx playwright install --with-deps
        - npm run test
    artifacts:
        paths:
            - pipeline_manager/frontend/playwright-report
            - pipeline_manager/frontend/test-results
        when: always

check-links:
    stage: build
    <<: *common_only
    script:
        - pip install -e '.[docs]'
        - cd docs
        - make linkcheck
    allow_failure: true

build-docs-and-static-html:
    stage: build
    <<: *common_only
    script:
        - pip install --no-deps -e .
        - cd docs
        - echo -en "\nhtml_js_files = [ '$ANNOTANT' ]" >> source/conf.py
        - |
          make html SPHINXOPTS="-W"
          make latexpdf
        - cp build/latex/*.pdf build/html/
    artifacts:
        paths:
            - docs/build/html
            - docs/build/latex/*.pdf

docs:
    image: $CI_DOCS_DOCKER_IMAGE
    stage: docs
    <<: *common_only
    dependencies:
        - build-docs-and-static-html
        - test-frontend
    variables:
        GIT_STRATEGY: none
    tags:
        - docs
    script:
        - cd docs
        - cp -r ../pipeline_manager/frontend/test-results build/html/
        - cp -r ../pipeline_manager/frontend/playwright-report build/html/
        - tar -cf $CI_DOCS_ARCHIVE -C build/html/ .
        - mv $CI_DOCS_ARCHIVE ..
    artifacts:
        paths:
            - $CI_DOCS_ARCHIVE
