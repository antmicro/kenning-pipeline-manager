/*
 * Copyright (c) 2022-2024 Antmicro <www.antmicro.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
@use 'sass:color';

:root {
    // Controls
    --baklava-control-color-primary: #{$green};
    --baklava-control-color-error: #{$red};
    --baklava-control-color-background: #{$gray-500};
    --baklava-control-color-foreground: #{$white};
    --baklava-control-color-hover: #{$gray-400};
    --baklava-control-color-active: #{$gray-200};
    --baklava-control-border-radius: 10px;

    // Nodes
    --baklava-node-color-background: #{$gray-600};
    --baklava-node-color-foreground: #{$white};
    --baklava-node-color-selected: --baklava-control-color-primary;
    --baklava-node-title-color-background: #{$gray-500};
    --baklava-node-title-color-foreground: #{$white};
    --baklava-node-border-radius: 15px;

    // Connections
    --baklava-color-connection-default: #{$white};
    --baklava-color-connection-allowed: #{$green};
    --baklava-color-connection-forbidden: #{$red};

    // Background pattern
    --baklava-editor-background-pattern-default: #{$black};
    --baklava-editor-background-pattern-line: #{$gray-500};
    --baklava-editor-background-pattern-black: #{$gray-500};

    // Sidebar
    --baklava-sidebar-color-background: #{$gray-600};
    --baklava-sidebar-color-foreground: #{$white};
}

.connections-container {
    z-index: 1;
}

.node-container {
    z-index: 2;
}

.selection-container {
    z-index: 3;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
}

.baklava-editor .background {
    background-image: linear-gradient($gray-700 2px, transparent 2px),
        linear-gradient(90deg, $gray-700 2px, transparent 2px);
}

.baklava-editor {
    position: relative;
    z-index: 1;
}

.baklava-slider > .__slider {
    background-color: $green;
}

.baklava-node-interface {
    padding: 0.5em 0;

    .--output {
        height: 1em;
    }

    .--input {
        height: 1em;
    }

    & > .__port,
    & > .__square {
        background-color: $green;
        width: 1em;
        height: 1em;
        top: calc(50% - 0.5em);

        &>svg {
            position: absolute;
            top: 0;
            left: 0;
            height: 1em;
            width: 1em;
        }
    }

    & > .__square {
        border-radius: 10%;

        & > .__port_name_left,
        & > .__port_name_right {
            position: relative;
            height: 1em;
            width: fit-content;
            top: -0.15em;

            & > span {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
                padding: 0 0.3em 0 0.3em;
                border-radius: 5px;
                background-color: color.adjust($green, $alpha: -0.5);
            }

            & > input {
                color: $white;
                background-color: color.adjust($gray-500, $alpha: -0.3);
                position: relative;
                outline: none;
                border: none;
                border-radius: 5px;
            }
            & > input:focus {
                outline: solid 2px $green;
            }
            // Incorrect class for input with red outline
            & > input.__error {
                outline: solid 2px $red;
            }
        }

        & > .__port_name_left {
            left: 0;
            translate: -100%;
            & > span,
            & > input {
                margin-left: 0;
            }
            & > span { margin-right: 0.15em; }
            & > input { margin-right: 0.3em; }
        }

        & > .__port_name_right {
            left: 100%;
            & > span,
            & > input {
                margin-right: 0;
            }
            & > span { margin-left: 0.15em; }
            & > input { margin-left: 0.3em; }
        }

        &.__port_input {
            position: relative;
            top: -0.15em;
            height: 1em;
            width: fit-content;

            background-color: #00000000;
            border: none;
            border-radius: 10%;
            color: $white;
            caret-color: $white;
        }
    }

    .__property_name {
        left: 0;
        translate: -100%;
        position: absolute;
        height: 1em;
        width: fit-content;
        top: 50%;

        & > span {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            padding: 0 0.3em 0 0.3em;
            border-radius: 5px;
            background-color: color.adjust($green, $alpha: -0.5);
            position: absolute;
            transform: translate(-102%, -50%);
        }

        & > input {
            color: $white;
            background-color: color.adjust($gray-500, $alpha: -0.3);
            outline: none;
            border: none;
            border-radius: 5px;
            position: absolute;
            transform: translate(-102%, -50%);
        }
        & > input:focus {
            outline: solid 2px $green;
        }
        & > input.__error {
            outline: solid 2px $red;
        }
    }

    .__property_input {
        position: relative;
        height: 1em;
        width: fit-content;

        background-color: #00000000;
        border: none;
        border-radius: 10%;
        color: $white;
        caret-color: $white;
    }

    &.__readonly > * {
        pointer-events: none;
        user-select: none;
        cursor: auto;

        * {
            pointer-events: none;
        }
    }

    & > .baklava-num-input {
        & > .__button {
            &.--inc {
                border-bottom-right-radius: var(--baklava-control-border-radius);
                border-top-right-radius: var(--baklava-control-border-radius);
            }

            &.--dec {
                border-bottom-left-radius: var(--baklava-control-border-radius);
                border-top-left-radius: var(--baklava-control-border-radius);
            }
        }
    }
}

.baklava-checkbox .__checkmark-container > svg > path {
    display: none;
}

.baklava-node-interface .greyedout_arrow {
    background-color: $gray-500;
};

.baklava-node-interface .picked {
    background-color: $gold !important;
};

.baklava-context-menu {
    display: flex;
    flex-direction: column;

    background-color: $gray-600;
    border-radius: unset;
    border: 1px solid $gray-500;
    cursor: auto;

    &.hidden-navbar {
        translate: 0 $navbar-height;
    }

    & > .item {
        display: flex;
        gap: 1em;
        position: relative;
        flex-direction: row;
        text-decoration: none;
        padding: 0.75em 1em;
        height: 2.75em;
        color: inherit;
        font-size: 0.875em;

        &:not(.--disabled):hover {
            color: var(--baklava-control-color-primary);
            cursor: pointer;
        }

        & > .icon {
            flex-grow: 0;
            pointer-events: none;
            width: auto;
            height: 1.25em;
            width: 1.25em;

            &:not(.readonly) {
                    &:hover {
                            color: var(--baklava-control-color-primary);
                    }
            }

            & > img {
                height: 1.25em;
                width: 1.25em;
            }

            & > svg {
                height: 1.25em;
                width: 1.25em;
            }
        }
    }
}

.baklava-context-menu > .item:not(.--header):not(.--active):not(.--disabled):hover {
    background-color: $gray-600;
}

.baklava-context-menu > .item:not(.--header):not(.--active):not(.--disabled):hover > .flex-fill {
    color: $green;
}

.baklava-context-menu
    > .item:not(.--header):not(.--active):not(.--disabled):hover
    > .ml-3
    svg
    path {
    fill: $green;
}

.baklava-context-menu > .item > .ml-3 > svg {
    height: 7px;
    transform: scale(80);
    scale: 0.02;
}

.baklava-context-menu > .item > .ml-3 > svg > path {
    d: path('M99.4,111.6l64.2,69.2L99.4,250h54.5l64.2-69.2l-64.2-69.2H99.4z') !important;
}

.rectangle-selection {
    height: 100%;
    width: 100%;
    opacity: 0.15;
    background-color: $green;
}

.rectangle-selection-border {
    border: 2px dashed $green;
    opacity: 0.7;
}
